/*******************************************************************************************************************************
[SQL 수행방법]
이하 단계를 수행한 후, 하나의 단계라도 이상이 없는 경우에만 해당 SQL이 실행됨
  - (1) 동일한 SQL의 수행여부 확인
        소프트 파싱(SoFt Parsing) : 기존에 수행된 SQL 실행계획 등의 실행 정보가 메모리에 저장되어 있다면 이를 재사용함
        하드 파싱(Hard Parsing) : 이전 실행정보가 존재하지 않아, SQL에 대한 구문분석 새로 시작
  - (2) 문법/절차 확인
        해당 단계에서 문제 발생 시, Syntax 에러 메시지 발생
  - (3) Semantic 확인
        Database Resolution 단계로, SQL에 사용된 테이블과 컬럼이 실제 존재하는지 확인
  - (4) 권한 확인
        해당 SQL 수행 권한이 있는지를 확인

[Query Transformation]
SQL을 변경하여 최대한 처리범위를 감소시킬 수 있는 조건을 확보하기 위해 옵티마이저가 단독으로 수행함
    - (1) Transitivity
          논리적으로 이상없는 조건(점 조건)을 추가하여 처리범위를 감소시켜 성능을 최적화
    - (2) 뷰 Merging
    - (3) 서브쿼리 Merging
    - (4) OR Expansion
    - (5) Query Rewrite
*******************************************************************************************************************************/

----------------------------------------------------------------------------------------------
-- 1) Transitivity
SELECT 사원.사원번호, 사원.사원이름, 부서.부서번호, 부서.부서이름
FROM 사원, 부서
WHERE 사원.부서번호 = 부서.부서번호
      AND 부서.부서번호 = '10'; -- 사원.부서번호도 = '10' 

SELECT 사원.사원번호, 사원.사원이름, 부서.부서번호, 부서.부서이름
FROM 사원, 부서
WHERE 사원.부서번호 = 부서.부서번호
      AND 부서.부서번호 = '10'
      AND 사원.부서번호 = '10'; -- Transitivity 적용

SELECT 사원.사원번호, 사원.사원이름, 부서.부서번호, 부서.부서이름 
  FROM 사원, 부서, 급여
 WHERE 사원.부서번호 = 부서.부서번호 
   AND 사원.부서번호 = 급여.부서번호; -- 조인조건은 Transitivity 불가능 (성능저하)

---- 특징
----  (1) 점 조건 가능
----  (2) 선분조건 불가능
----  (3) 조인 조건 불가능
---- 따라서 SQL을 작성하는 경우에 조인 조건의 설정을 매우 신중하게 설정해야 함
----------------------------------------------------------------------------------------------


----------------------------------------------------------------------------------------------
-- 2) 뷰 Merging
---- (1) 주 쿼리의 조건이 인라인 뷰 안으로 삽입되는 뷰 Merging
SELECT A.사원번호, A.사원이름, B.부서번호, B.부서이름
FROM 
      (
            SELECT 부서번호, 사원번호, 사원이름, SUM(급여)
            FROM 급여
            WHERE 부서번호 = 10
            GROUP BY 부서번호, 사원번호, 사원이름
      )A -- 인라인 뷰
      , 부서 B
WHERE A.부서번호 = B.부서번호
      AND A.사원번호 = '100'; -- 주 쿼리의 조건이 인라인 뷰 안으로 삽입된 형태

SELECT A.사원번호, A.사원이름, B.부서번호, B.부서이름
FROM 
      (
            SELECT 부서번호, 사원번호, 사원이름, SUM(급여)
            FROM 급여
            WHERE 부서번호 = 10
                  AND 사원번호 = '100' -- 뷰 Merging, 처리범위 감소
            GROUP BY 부서번호, 사원번호, 사원이름
      )A
      , 부서 B
WHERE A.부서번호 = B.부서번호;


---- (2) 인라인 뷰 또는 뷰의 SQL이 주 쿼리로 합쳐지는 뷰 Merging
SELECT A.부서이름, B.사원이름, C.주소
FROM 부서 A
      , (
            SELECT 부서번호, 등급, 사원이름, 주소
            FROM 사원 B -- 인라인 뷰가 볃로로 수행되지 않고 주 쿼리와 통합되어 수행되는 경우
            WHERE SAL > 200 -- 해당 SQL만을 보고 인덱스를 생성한다면, 보통의 경우에는 SAL 컬럼에만 인덱스를 생성함
      ) C
WHERE A.부서번호 = B.부서번호
      AND C.등급 = 'S';


SELECT A.부서이름, B.사원이름, C.주소
FROM 부서 A, 사원 B
WHERE A.부서번호 = B.부서번호
      AND B.등급 = 'S'
      AND B.SAL > 200;
-- 위의 SQL문이 이와같이 변경됨을 이해한다면, 처리범위를 더 감소할 수 있도록 인덱스를 GARDE+SAL로 생성하게 될 것임
