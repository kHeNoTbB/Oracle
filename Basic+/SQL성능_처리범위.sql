/******************************************************************************************************************
[SQL 성능]
  * SQL 성능에 영향을 주는 요소
    - 처리 범위의 양(엑세스 해야 하는 데이터의 크기)
    - 랜덤 액세스의 양
    - 정렬의 양
  * WHERE 절에 사용되는 연산자 조건에 의해, 액세스 해야 하는 처리 범위의 차이가 발생함
    - 점 조건   : IN, =
    - 선분 조건 : LIKE, BETWEEN, <, > 등
                 점 조건을 제외한 연산자를 사용한 조건으로, 해당 조건을 만족하는 모든 실수를 의미함
                 1) 점 + 점     : 두 조건에 의해 처리범위 감소
                 2) 점 + 선분   : 두 조건에 의해 처리범위 감소
                 3) 선분 + 선분 : 앞의 선분 조건에 의해 처리범위 감소
                 4) 선분 + 점   : 앞의 선분 조건에 의해서만 처리범위 감소


[요약]
인덱스에서 가장 중요한 요소는 처리 범위를 최소화 시킬 수 있어야 한다는 것이고, 그 중심에는 '결합 컬럼 인덱스'가 존재한다.
또한, 결합 컬럼 인덱스를 생성하고자 한다면, 점조건과 선분조건의 순서에 의해 처리범위가 변한다는 것에 주의하자
******************************************************************************************************************/

-- 1) 단일 칼럼 인덱스와 결합 칼럼 인덱스
------ [결론] 단일 칼럼 인덱스보다, 대부분의 SQL에서는 결합 칼럼 인덱스를 선택하는 편이 좋다.
SELECT 카드번호, 사용액
FROM 거래내역
WHERE 거래일자 = '201112'
      AND 사용구분 = '정상'
;
---- 위 SQL문에서 인덱스 종류는 총 4개 [거래일자], [사용구분], [거래일자+사용구분], [사용구분+거래일자]
-------- (1) [거래일자]
------------ 거래일자 컬럼의 값이 '201112'인 데이터를 모두 액세스한 후, 사용구분 컬럼값이 '정상'인 데이터만을 결과로 추출
------------ 즉, 처리범위는 거래일자 컬럼에 의해서만 감소하게 되므로, 사용구분 칼럼에 의해서는 처리범위가 감소하지 않는다.
-------- (2) [사용구분]
------------ 사용구분 칼럼의 값이 '정상'인 모든 데이터를 액세스 한다. 
------------ 거래일자 컬럼의 값은 처리범위를 감소시키기 위한 어떤 역할도 수행하지 않는다.
------------ 즉, 사용구분 칼럼의 값으로만 처리범위가 감소한다.
-------- (3) [거래일자+사용구분]
------------ 거래일자 칼럼의 값이 '201112'인 데이터 中 사용구분 컬럼 값이 '정상'인 데이터만 액세스
------------ 즉, 처리범위는 거래일자 칼럼에 의해 감소하며, 감소된 처리범위에서 사용구분 컬럼 값이 '정상'인 데이터만을 액세스하게 된다.
------------ 앞서 언급된 단일 컬럼 인덱스에 비해 처리범위가 더 많이 감소하게 되므로, 성능은 더욱 향상됨
-------- (4) [사용구분+거래일자]
------------ 사용구분의 컬럼 값이 '정상'인 데이터 중, 거래일자 컬럼의 값이 '201112'인 데이터만을 추출하게 된다.
------------ 이는 (3)과 동일하게, 사용구분 컬럼과 거래일자 컬럼에 의해 동시에 처리 범위가 감소해, 더 빠른 성능을 기대할 수 있다.


-- 2) '점'조건과 '선분'조건
SELECT 카드번호, 사용액
FROM 거래내역
WHERE 거래일자 > '201112'    -- 선분조건
      AND 사용구분 = '정상'  -- 점조건
;
---- 위 SQL문에서 최적의 인덱스를 이용하고자 한다면, [점+선분]인 [사용구분+거래일자] 인덱스를 생성해야 할 것이다.
---- [결론] 인덱스에서 가장 중요한 요소는 처리 범위를 최소화 시킬 수 있어야 한다는 것이고, 그 중심에는 '결합 컬럼 인덱스'가 존재한다.
----        또한, 결합 컬럼 인덱스를 생성하고자 한다면, 점조건과 선분조건의 순서에 의해 처리범위가 변한다는 것에 주의하자
